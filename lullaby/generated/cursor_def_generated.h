// Autogenerated code.  Do not edit.
#ifndef _LULLABY_LULLABY_GENERATED_CURSOR_DEF_GENERATED_H_
#define _LULLABY_LULLABY_GENERATED_CURSOR_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/cursor_def_generated.h"
#include "lullaby/util/common_types.h"
#include "lullaby/util/color.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "lullaby/util/typeid.h"
#include "common_generated.h"

namespace lull {
class CursorDefT;
class CursorDefT {
 public:
  using FlatBufferType = CursorDef;

  CursorDefT() {}

  float ring_active_diameter = 1.0f;
  float ring_inactive_diameter = 1.0f;
  lull::Color4ub hit_color;
  lull::Color4ub no_hit_color;
  float no_hit_distance = 2.0f;
  float inner_hole = 0.0f;
  float inner_ring_end = 0.177f;
  float inner_ring_thickness = 0.14f;
  float mid_ring_end = 0.177f;
  float mid_ring_opacity = 0.22f;
  lull::DeviceType device = lull::DeviceType_Controller;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void CursorDefT::SerializeFlatbuffer(Archive archive) {
  archive.Scalar(&ring_active_diameter, 4, 1.0f);
  archive.Scalar(&ring_inactive_diameter, 6, 1.0f);
  archive.NativeStruct(&hit_color, 8);
  archive.NativeStruct(&no_hit_color, 10);
  archive.Scalar(&no_hit_distance, 12, 2.0f);
  archive.Scalar(&inner_hole, 14, 0.0f);
  archive.Scalar(&inner_ring_end, 16, 0.177f);
  archive.Scalar(&inner_ring_thickness, 18, 0.14f);
  archive.Scalar(&mid_ring_end, 20, 0.177f);
  archive.Scalar(&mid_ring_opacity, 22, 0.22f);
  int32_t _device = static_cast<int32_t>(device);
  archive.Scalar(&_device, 24, lull::DeviceType_Controller);
  device = static_cast<lull::DeviceType>(_device);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::CursorDefT);

#endif  // _LULLABY_LULLABY_GENERATED_CURSOR_DEF_GENERATED_H_

