// Autogenerated code.  Do not edit.
#ifndef _LULLABY_LULLABY_GENERATED_RENDER_PASS_DEF_GENERATED_H_
#define _LULLABY_LULLABY_GENERATED_RENDER_PASS_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/render_pass_def_generated.h"
#include "lullaby/util/color.h"
#include "lullaby/util/common_types.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "lullaby/util/typeid.h"
#include "common_generated.h"
#include "render_state_def_generated.h"

namespace lull {
class RenderPassDefT;
class RenderPassDefT {
 public:
  using FlatBufferType = RenderPassDef;

  RenderPassDefT() {}

  std::string name;
  lull::RenderStateT render_state;
  lull::SortMode sort_mode = lull::SortMode_None;
  std::string render_target_ref;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void RenderPassDefT::SerializeFlatbuffer(Archive archive) {
  archive.String(&name, 4);
  archive.Table(&render_state, 6);
  archive.String(&render_target_ref, 10);
  uint16_t _sort_mode = static_cast<uint16_t>(sort_mode);
  archive.Scalar(&_sort_mode, 8, lull::SortMode_None);
  sort_mode = static_cast<lull::SortMode>(_sort_mode);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::RenderPassDefT);

#endif  // _LULLABY_LULLABY_GENERATED_RENDER_PASS_DEF_GENERATED_H_

