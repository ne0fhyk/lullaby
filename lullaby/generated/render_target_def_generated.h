// Autogenerated code.  Do not edit.
#ifndef _LULLABY_LULLABY_GENERATED_RENDER_TARGET_DEF_GENERATED_H_
#define _LULLABY_LULLABY_GENERATED_RENDER_TARGET_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/render_target_def_generated.h"
#include "lullaby/util/color.h"
#include "lullaby/util/common_types.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "lullaby/util/typeid.h"
#include "common_generated.h"

namespace lull {
class RenderTargetDefT;
class RenderTargetDefT {
 public:
  using FlatBufferType = RenderTargetDef;

  RenderTargetDefT() {}

  std::string name;
  mathfu::vec2i size = {0, 0};
  lull::TextureFormat texture_format = lull::TextureFormat_RGBA8;
  lull::DepthStencilFormat depth_stencil_format = lull::DepthStencilFormat_None;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void RenderTargetDefT::SerializeFlatbuffer(Archive archive) {
  archive.String(&name, 4);
  archive.NativeStruct(&size, 6);
  uint16_t _texture_format = static_cast<uint16_t>(texture_format);
  archive.Scalar(&_texture_format, 8, lull::TextureFormat_RGBA8);
  texture_format = static_cast<lull::TextureFormat>(_texture_format);
  uint16_t _depth_stencil_format = static_cast<uint16_t>(depth_stencil_format);
  archive.Scalar(&_depth_stencil_format, 10, lull::DepthStencilFormat_None);
  depth_stencil_format = static_cast<lull::DepthStencilFormat>(_depth_stencil_format);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::RenderTargetDefT);

#endif  // _LULLABY_LULLABY_GENERATED_RENDER_TARGET_DEF_GENERATED_H_

