// Autogenerated code.  Do not edit.
#ifndef _LULLABY_LULLABY_GENERATED_RIGID_BODY_DEF_GENERATED_H_
#define _LULLABY_LULLABY_GENERATED_RIGID_BODY_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/rigid_body_def_generated.h"
#include "lullaby/util/common_types.h"
#include "lullaby/util/color.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "lullaby/util/typeid.h"
#include "common_generated.h"
#include "physics_shapes_generated.h"

namespace lull {
class RigidBodyDefT;
class RigidBodyDefT {
 public:
  using FlatBufferType = RigidBodyDef;

  RigidBodyDefT() {}

  lull::RigidBodyType type = lull::RigidBodyType_Dynamic;
  lull::ColliderType collider_type = lull::ColliderType_Standard;
  std::vector<lull::PhysicsShapePartT> shapes;
  float mass = 1.0f;
  float friction = 0.5f;
  float restitution = 0.0f;
  bool enable_on_create = 1;
  lull::Optional<mathfu::vec3> linear_velocity;
  lull::Optional<mathfu::vec3> angular_velocity;
  lull::Optional<mathfu::vec3> center_of_mass_translation;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void RigidBodyDefT::SerializeFlatbuffer(Archive archive) {
  archive.VectorOfTables(&shapes, 8);
  int32_t _type = static_cast<int32_t>(type);
  archive.Scalar(&_type, 4, lull::RigidBodyType_Dynamic);
  type = static_cast<lull::RigidBodyType>(_type);
  int32_t _collider_type = static_cast<int32_t>(collider_type);
  archive.Scalar(&_collider_type, 6, lull::ColliderType_Standard);
  collider_type = static_cast<lull::ColliderType>(_collider_type);
  archive.Scalar(&mass, 10, 1.0f);
  archive.Scalar(&friction, 12, 0.5f);
  archive.Scalar(&restitution, 14, 0.0f);
  archive.Scalar(&enable_on_create, 16, 1);
  archive.NativeStruct(&linear_velocity, 18);
  archive.NativeStruct(&angular_velocity, 20);
  archive.NativeStruct(&center_of_mass_translation, 22);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::RigidBodyType);
LULLABY_SETUP_TYPEID(lull::ColliderType);
LULLABY_SETUP_TYPEID(lull::RigidBodyDefT);

#endif  // _LULLABY_LULLABY_GENERATED_RIGID_BODY_DEF_GENERATED_H_

