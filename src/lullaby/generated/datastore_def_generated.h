// Autogenerated code.  Do not edit.
#ifndef _SRC_LULLABY_GENERATED_DATASTORE_DEF_GENERATED_H_
#define _SRC_LULLABY_GENERATED_DATASTORE_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/datastore_def_generated.h"
#include "lullaby/base/common_types.h"
#include "lullaby/base/typeid.h"
#include "lullaby/util/color.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "common_generated.h"
#include "variant_def_generated.h"

namespace lull {
class DatastoreDefT;
class DatastoreDefT {
 public:
  using FlatBufferType = DatastoreDef;

  std::vector<lull::KeyVariantPairDefT> key_value_pairs;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void DatastoreDefT::SerializeFlatbuffer(Archive archive) {
  archive.VectorOfTables(&key_value_pairs, 4);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::DatastoreDefT);

#endif  // _SRC_LULLABY_GENERATED_DATASTORE_DEF_GENERATED_H_

