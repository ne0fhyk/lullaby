// Autogenerated code.  Do not edit.
#ifndef _SRC_LULLABY_GENERATED_RETICLE_DEF_GENERATED_H_
#define _SRC_LULLABY_GENERATED_RETICLE_DEF_GENERATED_H_

#include <type_traits>
#include <memory>
#include "flatbuffers/reticle_def_generated.h"
#include "lullaby/base/common_types.h"
#include "lullaby/base/typeid.h"
#include "lullaby/util/color.h"
#include "lullaby/util/math.h"
#include "lullaby/util/optional.h"
#include "common_generated.h"

namespace lull {
class ReticleDefT;
class ReticleDefT {
 public:
  using FlatBufferType = ReticleDef;

  float ring_active_diameter = 1.0f;
  float ring_inactive_diameter = 1.0f;
  float ring_half_thickness = 0.11f;
  lull::Color4ub hit_color;
  lull::Color4ub no_hit_color;
  float no_hit_distance = 2.0f;
  float inner_hole = 0.0f;
  float inner_ring_end = 0.177f;
  float inner_ring_thickness = 0.14f;
  float mid_ring_end = 0.177f;
  float mid_ring_opacity = 0.22f;
  float ergo_angle_offset = -0.26f;
  bool use_eye_collision_ray = 1;
  std::vector<lull::DeviceType> device_preference;

  template <typename Archive>
  void SerializeFlatbuffer(Archive archive);
};

template <typename Archive>
void ReticleDefT::SerializeFlatbuffer(Archive archive) {
  archive.template VectorOfScalars<lull::DeviceType, int32_t>(&device_preference, 30);
  archive.Scalar(&ring_active_diameter, 4, 1.0f);
  archive.Scalar(&ring_inactive_diameter, 6, 1.0f);
  archive.Scalar(&ring_half_thickness, 8, 0.11f);
  archive.NativeStruct(&hit_color, 10);
  archive.NativeStruct(&no_hit_color, 12);
  archive.Scalar(&no_hit_distance, 14, 2.0f);
  archive.Scalar(&inner_hole, 16, 0.0f);
  archive.Scalar(&inner_ring_end, 18, 0.177f);
  archive.Scalar(&inner_ring_thickness, 20, 0.14f);
  archive.Scalar(&mid_ring_end, 22, 0.177f);
  archive.Scalar(&mid_ring_opacity, 24, 0.22f);
  archive.Scalar(&ergo_angle_offset, 26, -0.26f);
  archive.Scalar(&use_eye_collision_ray, 28, 1);
}

}  // namespace lull

LULLABY_SETUP_TYPEID(lull::ReticleDefT);

#endif  // _SRC_LULLABY_GENERATED_RETICLE_DEF_GENERATED_H_

